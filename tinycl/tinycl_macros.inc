// -*- Mode: C++; -*-
// TinyCl - Macro Expanders
// tinycl_macros.inc
//
// Copyright (C) 2007-2008 by Project Vogue.
// Written by Yoshifumi "VOGUE" INOUE. (yosi@msn.com)
//
// @(#)$Id: /proj/evcl3/console/console.cpp 12 2006-01-26 01:14:00 yosi $
//

#if !defined(defmacro)
    #define defmacro(mp_name)
#endif // !defined(defmacro)

defmacro(backquote)

// There are 88 macros in package COMMON-LISP.

defmacro(and)
// defmacro(assert)
defmacro(case)
// defmacro(ccase)
// defmacro(check_type)
defmacro(cond)
// defmacro(ctypecase)
defmacro(decf)
defmacro(declaim)
// defmacro(defclass)
// defmacro(defconstant)
// defmacro(defgeneric)
// defmacro(define_compiler_macro)
// defmacro(define_condition)
// defmacro(define_method_combination)
// defmacro(define_modify_macro)
// defmacro(define_setf_expander)
// defmacro(define_symbol_macro)
defmacro(defmacro)
// defmacro(defmethod)
// defmacro(defpackage)
// defmacro(defparameter)
// defmacro(defsetf)
// defmacro(defstruct)
// defmacro(deftype)
defmacro(defun)
// defmacro(defvar)
defmacro(destructuring_bind)
// defmacro(do)
// defmacro(do*)
// defmacro(do_all_symbols)
// defmacro(do_external_symbols)
defmacro(dolist)
// defmacro(do_symbols)
defmacro(dotimes)
// defmacro(ecase)
// defmacro(etypecase)
// defmacro(formatter)
// defmacro(handler_bind)
defmacro(handler_case)
// defmacro(ignore_errors)
defmacro(incf)
defmacro(in_package)
defmacro(lambda)
defmacro(loop)
// defmacro(loop_finish)
defmacro(multiple_value_bind)
defmacro(multiple_value_list)
defmacro(multiple_value_setq)
defmacro(nth_value)
defmacro(or)
defmacro(pop)
// defmacro(pprint_logical_block)
// defmacro(print_unreadable_object)
defmacro(prog)
defmacro(progA)
defmacro(prog1)
defmacro(prog2)
// defmacro(psetf)
// defmacro(psetq)
defmacro(push)
// defmacro(pushnew)
// defmacro(remf)
// defmacro(restart_bind)
// defmacro(restart_case)
defmacro(return)
// defmacro(rotatef)
defmacro(setf)
// defmacro(shiftf)
// defmacro(step)
// defmacro(time)
// defmacro(trace)
defmacro(typecase)
defmacro(unless)
// defmacro(untrace)
defmacro(when)
// defmacro(with_accessors)
// defmacro(with_compilation_unit)
// defmacro(with_condition_restarts)
// defmacro(with_hash_table_iterator)
// defmacro(with_input_from_string)
// defmacro(with_open_file)
// defmacro(with_open_stream)
// defmacro(with_output_to_string)
// defmacro(with_package_iterator)
// defmacro(with_simple_restart)
// defmacro(with_slots)
// defmacro(with_standard_io_syntax)

#undef defmacro
